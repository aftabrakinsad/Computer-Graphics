#include <windows.h>  // for MS Windows
#include <GL/glut.h>  // GLUT, include glu.h and gl.h

/* Initialize OpenGL Graphics */
void initGL() {
	// Set "clearing" or background color
	glClearColor(0.0f, 1.0f, 0.0f, 1.0f); // Black and opaque
}

/* Handler for window-repaint event. Call back when the window first appears and
whenever the window needs to be re-painted. */
void display() {
	glClear(GL_COLOR_BUFFER_BIT);   // Clear the color buffer with current clearing color
// circle
/*int i;
GLfloat x = 0.3f;
GLfloat y = 0.3f;
GLfloat radious = 0.2f;
int triangleAmount = 40;
GLfloat twicePi = 2.0f * PI;


glBegin(GL_TRIANGLE_FAN);
glColor3b(43,78,88);
glVertex2f(x,y);
for(i= 0; i <= triangleAmount;i++){
    glVertex2f(
               x +(radious * cos(1 * twiceP1 / triangleAmount)),
               y + (radious * sin(i * twicePi / triangleAmount))
               );
}

    glEnd();
    glFlush();

*/



 glBegin(GL_QUADS);              // Each set of 4 vertices form a quad
	glColor3f(0.0f, 1.0f, 1.0f); // Red

	glVertex2f(-1.0f, 1.f);    // x, y
	glVertex2f(1.0f, 1.0f);
	glVertex2f(1.0f, 0.0f);    // x, y
	glVertex2f(-1.0f, 0.0f);

	glEnd();

		// Draw a Red 1x1 Square centered at origin
	/*glBegin(GL_TRIANGLES);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 0.0f, 0.0f); // Red

	glVertex2f(0.3f, 0.3f);    // x, y
	glVertex2f(-0.3f, 0.3f);
	glVertex2f(0.0f,  0.6f);

	glEnd();

    glBegin(GL_QUADS);              // Each set of 4 vertices form a quad
	glColor3f(1.0f, 1.0f, 1.0f); // Red

	glVertex2f(0.3f, 0.3f);    // x, y
	glVertex2f(-0.3f, 0.3f);
	glVertex2f(-0.3f, -0.6f);
	glVertex2f(0.3f, -0.6f);    // x, y

	glEnd();

	glBegin(GL_QUADS);              // Each set of 4 vertices form a quad
	glColor3f(0.0f, 0.0f, 0.0f); // Red

	glVertex2f(0.1f, 0.1f);    // x, y
	glVertex2f(-0.1f, 0.1f);
	glVertex2f(-0.1f, -0.6f);
	glVertex2f(0.1f, -0.6f);    // x, y

	glEnd();

    glBegin(GL_QUADS);              // Each set of 4 vertices form a quad
	glColor3f(0.0f, 0.0f, 0.0f); // Red

	    // x, y
	glVertex2f(0.25f, 0.05f);
	glVertex2f(0.15f, 0.05f);
	glVertex2f(0.15f, -0.15f);
	glVertex2f(0.25f, -0.15f);
	   // x, y

	glEnd();


    glBegin(GL_QUADS);              // Each set of 4 vertices form a quad
	glColor3f(0.0f, 0.0f, 0.0f); // Red

	    // x, y
	glVertex2f(-0.25f, 0.05f);
	glVertex2f(-0.15f, 0.05f);
	glVertex2f(-0.15f, -0.15f);
	glVertex2f(-0.25f, -0.15f);
	   // x, y

	glEnd();*/




	glFlush();  // Render now
}

/* Main function: GLUT runs as a console application starting at main()  */
int main(int argc, char** argv) {
	glutInit(&argc, argv);          // Initialize GLUT
	glutCreateWindow("");  // Create window with the given title
	glutInitWindowSize(320, 320);   // Set the window's initial width & height
	glutDisplayFunc(display);       // Register callback handler for window re-paint event
	initGL();                       // Our own OpenGL initialization
	glutMainLoop();                 // Enter the event-processing loop
	return 0;
}
